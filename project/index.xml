<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Yi Mei @ VUW</title>
    <link>https://meiyi1986.github.io/project/</link>
    <description>Recent content in Projects on Yi Mei @ VUW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Feb 2019 00:00:00 +1300</lastBuildDate>
    
	<atom:link href="https://meiyi1986.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automated Heuristic Design</title>
      <link>https://meiyi1986.github.io/project/ahd/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +1300</pubDate>
      
      <guid>https://meiyi1986.github.io/project/ahd/</guid>
      <description>Designing effective heuristic for solving complex real-world optimisation problems is very hard. It usually takes a lot of time and human effort to design an effective heuristic for a specific problem. However, there are a variety of complex problems and human experts are not enough. In this case, AI can help automatically design effective heuristics purely based on historical data.
In this research, we use Genetic Programming Hyper-Heuristic (GPHH) to automatically evolve heuristics.</description>
    </item>
    
    <item>
      <title>Evolutionary Scheduling and Combinatorial Optimisation</title>
      <link>https://meiyi1986.github.io/project/esco/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +1300</pubDate>
      
      <guid>https://meiyi1986.github.io/project/esco/</guid>
      <description>This research focuses on solving complicated real-world optimisation problems, which are typically NP-hard. Examples include job shop scheduling, vehicle routing, research allocation and scheduling in cloud, and web service composition. It is normally hardly possible to solve these problems to optimality. We have developed effective evolutionary algorithms and meta-heuristics to search for near-optimal solutions in a short time budget.</description>
    </item>
    
    <item>
      <title>Large Scale Global Optimisation</title>
      <link>https://meiyi1986.github.io/project/lsgo/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +1300</pubDate>
      
      <guid>https://meiyi1986.github.io/project/lsgo/</guid>
      <description>Most real-world optimisation problems are very large. For example, in a vehicle routing problem, there can be thousands of customers to be served. In addition, these problems have many local optima, and it is easy to be trapped into poor local optima.
Large scale global optimisation is a very challenging problem that seeks for the &amp;ldquo;global optimum&amp;rdquo; in a very large search space. Although evolutionary computation algorithms have shown premise in solving the hard optimisation problems, their performance is usually restricted into small or medium problem sizes.</description>
    </item>
    
  </channel>
</rss>